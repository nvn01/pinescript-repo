//@version=5
strategy("Ichimoku + *Manual* ADX + Donchian Stop Strategy",
     overlay=true,
     initial_capital=100000,
     default_qty_type=strategy.percent_of_equity,
     default_qty_value=100)

//━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
// ─── USER INPUTS ──────────────────────────────────────────────────────────────
//━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
tenkanLen       = input.int(9,   "Tenkan-Sen Period", minval=1)
kijunLen        = input.int(26,  "Kijun-Sen Period",  minval=1)
adxPeriod       = input.int(14,  "ADX Period (Manual)", minval=1)
adxThreshold    = input.float(20,"ADX Threshold",      minval=1, tooltip="Only trade if ADX > this")
donchianLength  = input.int(20,  "Donchian Channel Length (Stop)", minval=1)

//━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
// ─── 1) ICHIMOKU COMPONENT (TENKAN & KIJUN) ──────────────────────────────────
//━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
// Standard Ichimoku snippet: Tenkan-Sen & Kijun-Sen

tenkanHigh = ta.highest(high, tenkanLen)
tenkanLow  = ta.lowest(low,  tenkanLen)
tenkan     = (tenkanHigh + tenkanLow) / 2.0

kijunHigh = ta.highest(high, kijunLen)
kijunLow  = ta.lowest(low,  kijunLen)
kijun     = (kijunHigh + kijunLow) / 2.0

// A bullish signal if Tenkan crosses above Kijun
// A bearish signal if Tenkan crosses below Kijun
bullSignal = ta.crossover(tenkan, kijun)
bearSignal = ta.crossunder(tenkan, kijun)

//━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
// ─── 2) MANUAL ADX CALCULATION ───────────────────────────────────────────────
//━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
// We'll compute ADX from scratch. Steps:
//   1) True Range (TR)
//   2) +DM, -DM
//   3) Smoothed +DI, -DI
//   4) DX = absolute difference of +DI/-DI
//   5) ADX = RMA of DX

// 1) True Range
trueRange = math.max(high - low, math.max(math.abs(high - close[1]), math.abs(low - close[1])))

// 2) Directional Movement
plusDM  = (high - high[1]) > (low[1] - low) ? math.max(high - high[1], 0) : 0
minusDM = (low[1] - low) > (high - high[1]) ? math.max(low[1] - low, 0)   : 0

// 3) Smooth them with RMA (or you could use other smoothing)
trRMA     = ta.rma(trueRange, adxPeriod)
plusDMrma = ta.rma(plusDM,    adxPeriod)
minusDMrma= ta.rma(minusDM,   adxPeriod)

// 4) +DI, -DI
plusDI  = (plusDMrma / trRMA)  * 100
minusDI = (minusDMrma / trRMA) * 100

// 5) DX & ADX
dx       = math.abs(plusDI - minusDI) / (plusDI + minusDI) * 100
adxValue = ta.rma(dx, adxPeriod)

// We only trade if ADX > threshold
strongTrend = adxValue > adxThreshold

// Combine Ichimoku signals with ADX filter
longCondition  = bullSignal  and strongTrend
shortCondition = bearSignal and strongTrend

//━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
// ─── 3) ENTRY LOGIC + STOP & REVERSE ─────────────────────────────────────────
//━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

if longCondition
    // If short, close out first
    if strategy.position_size < 0
        strategy.close_all("ReverseToLong")
    // Enter Long
    strategy.entry("Long", strategy.long)

if shortCondition
    // If long, close out first
    if strategy.position_size > 0
        strategy.close_all("ReverseToShort")
    // Enter Short
    strategy.entry("Short", strategy.short)

//━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
// ─── 4) DONCHIAN CHANNEL TRAILING STOP ───────────────────────────────────────
//━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
// We'll exit longs if price hits the Donchian Low, and exit shorts if price hits
// the Donchian High.

donchianHigh = ta.highest(high, donchianLength)
donchianLow  = ta.lowest(low,  donchianLength)

longPos  = strategy.position_size > 0
shortPos = strategy.position_size < 0

if longPos
    // If close is below donchianLow => exit
    strategy.exit("Exit Long", "Long", stop=donchianLow, comment="Donchian Stop")

if shortPos
    // If close is above donchianHigh => exit
    strategy.exit("Exit Short", "Short", stop=donchianHigh, comment="Donchian Stop")

//━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
// ─── PLOTTING ─────────────────────────────────────────────────────────────────
//━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

// Plot Tenkan & Kijun
plot(tenkan, color=color.new(color.red, 0),   linewidth=2, title="Tenkan-Sen")
plot(kijun,  color=color.new(color.blue, 0),  linewidth=2, title="Kijun-Sen")

// Plot Donchian Channel
plot(donchianHigh, color=color.new(color.green, 0), title="Donchian High")
plot(donchianLow,  color=color.new(color.red,   0), title="Donchian Low")

// Debug: Plot manual ADX in separate window (optional)
plot(adxValue, title="Manual ADX", color=color.yellow, display=display.pane)
hline(adxThreshold, title="ADX Threshold", color=color.new(color.white, 70))

//━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
// ─── ALERTS (OPTIONAL) ────────────────────────────────────────────────────────
//━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
alertcondition(longCondition,  title="Ichimoku Bullish + ADX", message="Tenkan > Kijun + ADX strong => Potential Long")
alertcondition(shortCondition, title="Ichimoku Bearish + ADX", message="Tenkan < Kijun + ADX strong => Potential Short")
